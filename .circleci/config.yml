version: 2.1

jobs:
  client_java:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/instrumenting-java-for-prometheus/client_java

    steps:
    - checkout:
        path: ~/instrumenting-java-for-prometheus/
    - run:
        command: mvn -B clean package
    - setup_remote_docker
    - run: docker build -t client_java:latest .
    - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD quay.io
    - run: docker tag client_java:latest "quay.io/simonpasquier/client_java:latest"
    - run: docker push quay.io/simonpasquier/client_java

  mp_metrics:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/instrumenting-java-for-prometheus/mp_metrics

    steps:
    - checkout:
        path: ~/instrumenting-java-for-prometheus/
    - run:
        command: ./mvnw package -Pnative
    - setup_remote_docker
    - run: docker build -f src/main/docker/Dockerfile.native -t mp_metrics:latest .
    - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD quay.io
    - run: docker tag client_java:latest "quay.io/simonpasquier/client_java:latest"
    - run: docker push quay.io/simonpasquier/client_java

  micrometer:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/instrumenting-java-for-prometheus/micrometer
    steps:
    - checkout:
        path: ~/instrumenting-java-for-prometheus/
    - run: gradle -q clean assemble
    - setup_remote_docker
    - run: docker build -t micrometer:latest .
    - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD quay.io
    - run: docker tag micrometer:latest "quay.io/simonpasquier/micrometer:latest:latest"
    - run: docker push quay.io/simonpasquier/micrometer

workflows:
  version: 2
  master:
    jobs:
    - client_java:
        context: Quay
    - mp_metrics:
        context: Quay
    - micrometer:
        context: Quay
